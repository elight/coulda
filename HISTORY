0.1.0
-----
Initial release with basic features to generate tests from internal DSL

0.1.1
-----
Corrections for github gem build process

0.1.2 && 0.1.3
--------------
Cleanup

0.2.0
-----
- Fixed issue 1 which prevented "extract method" on calls to Given/When/Then
  - Refactored Feature and Scenario accordingly assigning more responsibility to Feature
- No longer enforcing order/presence of Given/When/Then within Scenarios

0.3.0
-----
- Adds coulda:print_features task, providing plain text output in a 
  form similar to Cucumber's Gherkin
- Added hooks for Devver's continuous integration API

0.3.1
-----
- Minor refactorings
- Added more examples
- Adds "And" support to Given, When, and Then

0.4.0
-----
- Complete internal redesign/rewrite
- Feature method now accepts a :testcase_class => Class argument specifying the subclass of Test::Unit::TestCase,
  allowing for simple integration with other Test::Unit frameworks

0.4.1
-----
- Modified to use 'pending' instead of 'jeremymcanally-pending' from github (after I removed the 'bones' gem 
  dependency from 'pending')

0.4.2
-----
- Moved 'vendored' files under coulda and added them to the gemspec (woops)

0.4.3
-----
- Put missing rake task in the gemspec
- Added examples that were previously in the git repo but not in the gemspec

0.4.4
-----
- Reversed decision on naming "feature" files as _feature.rb.  Should just be _test.rb like any other test
- Features now register with a World when they are created which is used in the rake task instead of ObjectSpace.each_object

0.4.5
-----
- No longer requires rubygems for Ruby 1.9.1
